"use strict";
var core_1 = require("@angular/core");
var observable_array_1 = require("data/observable-array");
var chart = require("nativescript-telerik-ui-pro/chart");
//USING PLUGIN: NATIVESCRIPT-DRAWINGPAD
var ChartsPage = (function () {
    function ChartsPage() {
        this.trackball = new chart.Trackball();
        this.trackball.showIntersectionPoints = true;
        this.trackball.snapMode = 'ClosestPoint';
    }
    Object.defineProperty(ChartsPage.prototype, "categoricalSource", {
        get: function () {
            return this._categoricalSource;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartsPage.prototype, "categoricalSource2", {
        get: function () {
            return this._categoricalSource2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartsPage.prototype, "rangeBarSource", {
        get: function () {
            return this._rangeBarSource;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartsPage.prototype, "highDataModel", {
        get: function () {
            return this._highDataModel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartsPage.prototype, "middleDataModel", {
        get: function () {
            return this._middleDataModel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartsPage.prototype, "lowDataModel", {
        get: function () {
            return this._lowDataModel;
        },
        enumerable: true,
        configurable: true
    });
    ChartsPage.prototype.ngOnInit = function () {
        this._categoricalSource = new observable_array_1.ObservableArray([
            { Country: 'Germany', Amount: 15 },
            { Country: 'France', Amount: 13 },
            { Country: 'Bulgaria', Amount: 24 },
            { Country: 'Spain', Amount: 11 },
            { Country: 'USA', Amount: 18 }
        ]);
        this._categoricalSource2 = new observable_array_1.ObservableArray([
            { Country: 'Germany', Amount: 10 },
            { Country: 'France', Amount: 17 },
            { Country: 'Bulgaria', Amount: 5 },
            { Country: 'Spain', Amount: 23 },
            { Country: 'USA', Amount: 12 }
        ]);
        this._rangeBarSource = new observable_array_1.ObservableArray([
            { Name: 'Groceries', High: 30, Low: 12 },
            { Name: 'Tools', High: 135, Low: 124 },
            { Name: 'Electronics', High: 55, Low: 12 },
            { Name: 'Gardening', High: 50, Low: 29 }
        ]);
        this._highDataModel = new observable_array_1.ObservableArray([
            { Year: 2000, Amount: 15, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1456, Amount: 13, Impact: 7, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1866, Amount: 25, Impact: 10, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1900, Amount: 5, Impact: 3, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1700, Amount: 17, Impact: 4, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1600, Amount: 20, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
        ]);
        this._middleDataModel = new observable_array_1.ObservableArray([
            { Year: 1200, Amount: 15, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1156, Amount: 13, Impact: 7, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 1000, Amount: 25, Impact: 10, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 900, Amount: 5, Impact: 3, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 700, Amount: 17, Impact: 4, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 600, Amount: 20, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
        ]);
        this._lowDataModel = new observable_array_1.ObservableArray([
            { Year: 200, Amount: 15, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 456, Amount: 13, Impact: 7, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 366, Amount: 25, Impact: 10, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 100, Amount: 5, Impact: 3, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 340, Amount: 17, Impact: 4, Country: '', SecondVal: 0, ThirdVal: 0 },
            { Year: 135, Amount: 20, Impact: 1, Country: '', SecondVal: 0, ThirdVal: 0 },
        ]);
    };
    return ChartsPage;
}());
ChartsPage = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'sc-charts-page',
        templateUrl: 'charts.html',
        styleUrls: ['charts.css']
    }),
    __metadata("design:paramtypes", [])
], ChartsPage);
exports.ChartsPage = ChartsPage;
//# sourceMappingURL=data:application/json;base64,